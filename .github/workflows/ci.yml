name: CI Pipeline

on:
  push:
    branches: [main]
    tags:
      - "v*.*.*"
    paths-ignore:
      - "charts/**"
  pull_request:
    branches: [main]
    paths-ignore:
      - "charts/**"

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: python -m unittest discover tests

  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract tag name
        id: extract_tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Publish Image
        id: publish
        uses: matootie/github-docker@v3.0.0
        with:
          accessToken: ${{ secrets.PACKAGES_WRITE }}
          tag: ${{ steps.extract_tag.outputs.tag }}

      - name: Print Full Image URL
        run: echo ${{ steps.publish.outputs.imageURL }}:${{ steps.extract_tag.outputs.tag }}

  update-helm-chart:
    name: Update Helm Chart Version
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Extract version from tag
        id: extract_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Update Chart.yaml appVersion
        run: |
          VERSION=${{ steps.extract_version.outputs.version }}
          sed -i 's/^\(appVersion:\s*\).*/\1"'${VERSION}'"/' charts/porkbun-dns-update/Chart.yaml

      - name: Commit and push changes
        run: |
          git add charts/porkbun-dns-update/Chart.yaml
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "ci: Update Helm chart appVersion to ${{ steps.extract_version.outputs.version }}"
            git push
          fi
